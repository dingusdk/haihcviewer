{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/modify-template.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/lib/shady-render.js","webpack:///./node_modules/lit-element/lib/updating-element.js","webpack:///./node_modules/lit-element/lib/decorators.js","webpack:///./node_modules/lit-element/lib/css-tag.js","webpack:///./node_modules/lit-element/lit-element.js","webpack:///./src/ihcmanager.ts","webpack:///./src/dialogs/ihc-resource-dlg.ts","webpack:///./src/elements/ihc-tree-node.ts","webpack:///./src/ihcproject.ts","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/dom.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/template.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/modify-template.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/directive.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/part.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/template-instance.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/template-result.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/parts.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/template-factory.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/render.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/default-template-processor.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lit-html.js","webpack:///./homeassistant-frontend/node_modules/lit-html/lib/shady-render.js","webpack:///./homeassistant-frontend/node_modules/lit-element/lib/updating-element.js","webpack:///./homeassistant-frontend/node_modules/lit-element/lib/decorators.js","webpack:///./homeassistant-frontend/node_modules/lit-element/lib/css-tag.js","webpack:///./homeassistant-frontend/node_modules/lit-element/lit-element.js","webpack:///./homeassistant-frontend/src/resources/styles.ts","webpack:///./src/elements/loader-element.ts","webpack:///./src/panel.ts","webpack:///./src/elements/ihc-controller-element.ts","webpack:///./src/elements/ihc-info-element.ts","webpack:///./src/elements/ihc-log-element.ts","webpack:///./src/dialogs/ihc-binary-res-dlg.ts","webpack:///./src/dialogs/ihc-sensor-res-dlg.ts","webpack:///./src/elements/ihc-properties-element.ts","webpack:///./src/copytoclipboard.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","noChange","nothing","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","getHTML","innerHTML","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","v","text","setAttribute","_getValue","committer","directive","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","templateCache","templateCaches","stringsArray","keyString","Map","set","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","HTMLElement","initialize","finalize","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","descriptor","getPropertyDescriptor","oldValue","requestUpdateInternal","configurable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","constructor","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","customElement","classOrDescriptor","clazz","define","legacyCustomElement","kind","elements","standardCustomElement","standardProperty","assign","placement","initializer","protoOrDescriptor","proto","legacyProperty","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","delete","__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","step","next","rejected","done","then","apply","IHCManager","hass","_hass","controllers","theoneandonly","controllerId","IHCController","input","init","auth","connection","expired","refreshAccessToken","headers","accessToken","fetch","project","ihcmapping","response","fetchWithAuth","ok","projectdata","projectxml","DOMParser","parseFromString","json","IhcResourceDialog_1","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","IhcResourceDialog","button_style","title","ihc_id","on_id","off_id","render_controls","onOk","onCancel","_super","shadowRoot","getElementById","focus","display","close","dispatchEvent","CustomEvent","alert","Selection","IhcTreeNode","expanded","selected","NotSelected","getNodeClasses","render_expandicon","iconclass","getTextClasses","select","Name","Note","Position","render_children","Children","icon","getExpandClasses","toggleExpand","children","child","Id","changedProps","treenode","cls","Selected","OnIdSelected","OffIdSelected","bubbles","composed","detail","shiftKey","IHCBase","id","parseInt","substring","NodeTagName","subnodename","addnode","nodes","ownerDocument","evaluate","XPathResult","ORDERED_NODE_ITERATOR_TYPE","subnode","iterateNext","IHCGroup","FunctionBlocks","Products","FindAndAdd","IHCFunctionBlock","products","pnode","product","IHCWirelessProduct","IHCDatalineProduct","IHCProduct","Inputs","Outputs","IHCInput","IHCOutput","inputs","inputnode","outputs","outputnode","output","IHCResource","IHCProject","xmldoc","Groups","gs","group","haStyle","LoaderElement","HaPanelIHCViewer","restartRequired","panel","config","onRestartRequired","render_restart","render_controllersSelector","controllerid","selectedcontrollerid","onChangeController","IhcControllerElement","isProjectLoading","onselected","offselected","ihcproject","selectedtab","show","selectTab","onSelectNode","render_groups","loadController","getMapping","restartevent","getProject","updateProject","fn","_a","_b","_c","setSelected","tab","IhcInfoElement","isLoading","systeminfo","uptimestr","uptimeAsString","brand","hw_revision","led_dimmer_software_version","production_date","serial_number","sw_date","version","systemInfoRequest","uptime","days","floor","hours","minutes","IhcLogElement","log","isLogLoading","logRequest","txt","IhcBinaryResourceDialog","concat","inverted","checked","IhcSensorResourceDialog","unit","onCopy","renderValueActions","entity_id","state","friendly_name","manual","removeManual","action_binary_sensor","showDialog","action_light","action_sensor","action_switch","makeBinarySensor","makeLight","makeSwitch","makeSensor","runtimeBoolOn","runtimeBoolOff","runtimeBoolToggle","selectednode","onid","offid","selectedid","IsLightLevel","dlg","open","apiRequest","requestUpdate","url","method","cache","body","textArea","position","top","left","width","height","padding","border","outline","boxShadow","background","execCommand"],"mappings":"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","file":"panel.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IHCProject } from \"./ihcproject\";\n/*\nIHCManager is a singleton. use IHCManager.instance\n*/\nexport class IHCManager {\n    constructor(hass) {\n        this._hass = hass;\n        this.controllers = [];\n    }\n    static initialize(hass) {\n        IHCManager.theoneandonly = new IHCManager(hass);\n    }\n    static get instance() {\n        return IHCManager.theoneandonly;\n    }\n    get hass() {\n        return this._hass;\n    }\n    get(controllerId) {\n        if (!(controllerId in this.controllers)) {\n            this.controllers[controllerId] = new IHCController(controllerId);\n        }\n        return this.controllers[controllerId];\n    }\n    fetchWithAuth(input, init = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let auth = this.hass.connection.options.auth;\n            if (auth.expired) {\n                yield auth.refreshAccessToken();\n            }\n            if (!init.headers) {\n                init.headers = {};\n            }\n            init.headers['authorization'] = `Bearer ${auth.accessToken}`;\n            return yield fetch(input, init);\n        });\n    }\n}\nclass IHCController {\n    constructor(controllerId) {\n        this.controllerId = controllerId;\n        this.project = null;\n        this.ihcmapping = null;\n    }\n    getProject() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.project == null) {\n                let response = yield IHCManager.instance.fetchWithAuth(`/api/ihcviewer/project/${this.controllerId}`);\n                if (response.ok) {\n                    let projectdata = yield response.text();\n                    let xmlparser = new DOMParser();\n                    let projectxml = xmlparser.parseFromString(projectdata, \"text/xml\");\n                    this.project = new IHCProject(projectxml);\n                }\n            }\n            return this.project;\n        });\n    }\n    getMapping() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.ihcmapping == null) {\n                let response = yield IHCManager.instance.fetchWithAuth(`/api/ihcviewer/mapping/${this.controllerId}`);\n                if (response.ok) {\n                    this.ihcmapping = yield response.json();\n                }\n            }\n            return this.ihcmapping;\n        });\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar IhcResourceDialog_1;\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\n// Base class for all resource dialogs\nlet IhcResourceDialog = IhcResourceDialog_1 = class IhcResourceDialog extends LitElement {\n    static get button_style() {\n        return css `\n      button {\n        border-radius: 4px;\n        background-color: var(--mdc-theme-primary, #6200ee);\n        color: var(--mdc-theme-on-primary, #fff);\n        padding: 5px 10px 5px 10px;\n        border: none;\n        border-radius: var(--ha-card-border-radius, 4px);\n        box-shadow: var( --ha-card-box-shadow, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12) );\n      }`;\n    }\n    static get styles() {\n        return [\n            IhcResourceDialog_1.button_style,\n            css `\n      #dlgmask {\n        display:none;\n        position: absolute;\n        top: 0px;\n        bottom: 0px;\n        left: 0px;\n        right: 0px;\n        z-index: 8000;\n        background-color: #80808080;\n      }\n      .dlg {\n        display: none;\n        border: 2px solid var(--divider-color);\n        padding: 10px 20px 10px 20px;\n        position: absolute;\n        left: 100px;\n        bottom: calc( 0% + 100px);\n        z-index: 8001;\n        background-color: var(--primary-background-color);\n      }\n      .dlgtitle {\n        font-size: 14px;\n        font-weight: bold;\n        padding-bottom: 10px;\n      }\n      .coloumn {\n        display: flex;\n        flex-direction: column;\n        width: fit-content;\n      }\n      .row {\n        display: flex;\n        flex-direction: row;\n      }\n      .control-row {\n        display: inline-block;\n        padding-bottom: 8px;\n      }\n      .buttonrow {\n        text-align:center;\n        padding-top: 10px;\n        padding-bottom: 10px;\n      }\n      .buttonrow button {\n        width: 6em;\n      }\n    `\n        ];\n    }\n    render() {\n        return html `\n      <div id=\"dlgmask\"></div>\n      <div id=\"dlg\" class=\"dlg\">\n        <div class=\"dlgtitle\">${this.title}</div>\n        <div class=\"coloumn\">\n          <div class=\"control-row\">\n            <div>IHC Resourceid: ${this.ihc_id}</div>\n          </div>\n          ${this.on_id ? html `\n            <div class=\"control-row\">\n              <div>on_id: ${this.on_id}</div>\n            </div>\n          ` : ''}\n          ${this.off_id ? html `\n            <div class=\"control-row\">\n              <div>off_id: ${this.off_id}</div>\n            </div>\n          ` : ''}\n          <div class=\"control-row\">\n            <div>Name</div>\n            <input id=\"name\" type=\"text\" size=\"30\"/>\n          </div>\n          ${this.render_controls()}\n          <slot></slot>\n        </div>\n        <div class=\"buttonrow\">\n            <button @click=${this.onOk}>Ok</button>\n            <button @click=\"${this.onCancel}\">Cancel</button>\n          </div>\n      </div>\n    `;\n    }\n    firstUpdated(changedProperties) {\n        const _super = Object.create(null, {\n            firstUpdated: { get: () => super.firstUpdated }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.firstUpdated.call(this, changedProperties);\n            this.shadowRoot.getElementById(\"name\").focus();\n        });\n    }\n    // Derived classes will overwrite this to add more\n    render_controls() {\n        return html ``;\n    }\n    open() {\n        this.shadowRoot.getElementById(\"dlgmask\").style.display = 'block';\n        this.shadowRoot.getElementById(\"dlg\").style.display = 'block';\n    }\n    close() {\n        this.shadowRoot.getElementById(\"dlgmask\").style.display = 'none';\n        this.shadowRoot.getElementById(\"dlg\").style.display = 'none';\n    }\n    onOk() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.name = this.shadowRoot.getElementById(\"name\").value;\n            if (this.name == \"\") {\n                alert(\"You must specify a name\");\n                return;\n            }\n            this.close();\n            this.dispatchEvent(new CustomEvent('ok'));\n        });\n    }\n    onCancel() {\n        this.close();\n    }\n};\n__decorate([\n    property({ type: String, attribute: false })\n], IhcResourceDialog.prototype, \"controllerId\", void 0);\n__decorate([\n    property({ type: Number, attribute: false })\n], IhcResourceDialog.prototype, \"ihc_id\", void 0);\n__decorate([\n    property({ type: Number, attribute: false })\n], IhcResourceDialog.prototype, \"on_id\", void 0);\n__decorate([\n    property({ type: Number, attribute: false })\n], IhcResourceDialog.prototype, \"off_id\", void 0);\n__decorate([\n    property({ type: String })\n], IhcResourceDialog.prototype, \"title\", void 0);\n__decorate([\n    property({ type: String, attribute: false })\n], IhcResourceDialog.prototype, \"name\", void 0);\nIhcResourceDialog = IhcResourceDialog_1 = __decorate([\n    customElement(\"ihc-resource-dlg\")\n], IhcResourceDialog);\nexport { IhcResourceDialog };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nexport var Selection;\n(function (Selection) {\n    Selection[Selection[\"NotSelected\"] = 0] = \"NotSelected\";\n    Selection[Selection[\"Selected\"] = 1] = \"Selected\";\n    Selection[Selection[\"OnIdSelected\"] = 2] = \"OnIdSelected\";\n    Selection[Selection[\"OffIdSelected\"] = 3] = \"OffIdSelected\";\n})(Selection || (Selection = {}));\n;\nlet IhcTreeNode = class IhcTreeNode extends LitElement {\n    constructor() {\n        super();\n        this.data = null;\n        this.expanded = false;\n        this.selected = Selection.NotSelected;\n        this.expanded = false;\n        this.selected = Selection.NotSelected;\n    }\n    static get styles() {\n        return css `\n      .treeicon {\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        background-repeat: no-repeat;\n        vertical-align: middle;\n      }\n      .treeicon svg {\n        display: none;\n      }\n      span.connection svg {\n        display: inline-block;\n        position: absolute;\n        left: -16px;\n        top: 0;\n      }\n      .connected span.connection {\n        display: block;\n        position: relative;\n        width: 0;\n        height: 0;\n      }\n      .groupicon svg.groupicon {\n        display: inline-block;\n      }\n      .producticon svg.producticon {\n        display: inline-block;\n      }\n      .functionicon svg.functionicon {\n        display: inline-block;\n      }\n      .inputicon svg.inputicon {\n        display: inline-block;\n      }\n      .outputicon svg.outputicon {\n        display: inline-block;\n      }\n      .expandicon {\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        cursor: pointer;\n        vertical-align: middle;\n      }\n      .treenode.selected {\n        background-color: var(--primary-color);\n      }\n      .treetext.onselected::after {\n        content: \"on_id\";\n        font-size: 12px;\n        font-weight: bold;\n        vertical-align: super;\n        padding: 0px 5px 0px 5px\n      }\n      .treetext.offselected::after {\n        content: \"off_id\";\n        font-size: 12px;\n        font-weight: bold;\n        vertical-align: super;\n        padding: 0px 5px 0px 5px\n      }\n      .treetext {\n        cursor: default;\n        font-size: 16px;\n        vertical-align: middle;\n      }\n      .treeinfo {\n        font-size: 0.8em;\n        cursor: default;\n      }\n      div.treenode {\n        width: fit-content;\n        user-select: none;\n      }\n      div.treenode ul {\n        margin-top: 0;\n      }\n    `;\n    }\n    render() {\n        return html `\n      <div id=\"treenode\" class=\"treenode ${this.getNodeClasses()}\">\n        <span style=\"display: flex; flex-direction: row\">\n          <span>\n            ${this.render_expandicon()}\n            <span class=\"treeicon ${this.data.iconclass}\">\n              <span class=\"connection\">\n                <svg style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                  <path fill=\"currentColor\" d=\"M11 15H6L13 1V9H18L11 23V15Z\" />\n                </svg>\n              </span>\n              <svg class=\"groupicon\" style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\"\n                  d=\"M20,18H4V8H20M20,6H12L10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6Z\" />\n              </svg>\n              <svg class=\"producticon\" style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\"\n                  d=\"M9,7H13A2,2 0 0,1 15,9V11A2,2 0 0,1 13,13H11V17H9V7M11,9V11H13V9H11M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M5,5V19H19V5H5Z\" />\n              </svg>\n              <svg class=\"functionicon\" style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\"\n                  d=\"M9,7H15V9H11V11H14V13H11V17H9V7M3,5A2,2 0 0,1 5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5C3.89,21 3,20.1 3,19V5M5,5V19H19V5H5Z\" />\n              </svg>\n              <svg class=\"inputicon\" style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z\" />\n              </svg>\n              <svg class=\"outputicon\" style=\"width: 16px; height: 16px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\" />\n              </svg>\n            </span>\n          </span>\n          <span style=\"display: flex; flex-direction: column\">\n            <span class=\"treetext ${this.getTextClasses()}\" @click=${this.select}>${this.data.Name}</span>\n            ${this.data.Note\n            ? html ` <span class=\"treeinfo\">Note: ${this.data.Note}</span> `\n            : \"\"}\n            ${this.data.Position ?\n            html `<span class=\"treeinfo\">Position: ${this.data.Position}</span>` : \"\"}\n          </span>\n        </span>\n        ${this.render_children()}\n      </div>\n      </template>\n    `;\n    }\n    render_expandicon() {\n        if (!this.data.Children)\n            return \"\";\n        let icon = this.expanded ? html `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\"\n          d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7\"\n        />\n      </svg>` :\n            html `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n      <path fill=\"currentColor\"\n        d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z\"\n      />\n      </svg>`;\n        return html `<span class=\"${this.getExpandClasses(this.expanded)}\" @click=${this.toggleExpand}>\n      ${icon}\n    </span>`;\n    }\n    render_children() {\n        if (!this.expanded)\n            return \"\";\n        var children = [];\n        if (this.data.Children) {\n            children = this.data.Children.map((child) => html `<ihc-tree-node id=\"treenode_${child.Id}\"></ihc-tree-node>`);\n        }\n        return html ` <ul>${children}</ul>`;\n    }\n    firstUpdated(changedProps) {\n        const _super = Object.create(null, {\n            firstUpdated: { get: () => super.firstUpdated }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.firstUpdated.call(this, changedProps);\n        });\n    }\n    updated(changedProps) {\n        const _super = Object.create(null, {\n            updated: { get: () => super.updated }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.updated.call(this, changedProps);\n            if (this.data.Children) {\n                this.data.Children.map((child) => {\n                    var treenode = this.shadowRoot.getElementById(`treenode_${child.Id}`);\n                    if (treenode) {\n                        treenode.data = child;\n                    }\n                });\n            }\n        });\n    }\n    getExpandClasses(expanded) {\n        return expanded ? \"expandicon expanded\" : \"expandicon\";\n    }\n    toggleExpand() {\n        this.expanded = !this.expanded;\n    }\n    getNodeClasses() {\n        let cls = \"\";\n        if (this.selected >= Selection.Selected)\n            cls = \"selected\";\n        return cls;\n    }\n    getTextClasses() {\n        let cls = \"\";\n        if (this.selected == Selection.OnIdSelected)\n            cls += \" onselected\";\n        if (this.selected == Selection.OffIdSelected)\n            cls += \" offselected\";\n        return cls;\n    }\n    select(event) {\n        this.dispatchEvent(new CustomEvent(\"select\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n                node: this,\n                shiftKey: event.shiftKey\n            },\n        }));\n    }\n};\n__decorate([\n    property({ type: Object })\n], IhcTreeNode.prototype, \"data\", void 0);\n__decorate([\n    property({ type: Boolean })\n], IhcTreeNode.prototype, \"expanded\", void 0);\n__decorate([\n    property({ type: Number })\n], IhcTreeNode.prototype, \"selected\", void 0);\nIhcTreeNode = __decorate([\n    customElement(\"ihc-tree-node\")\n], IhcTreeNode);\nexport { IhcTreeNode };\n","export class IHCBase {\n    constructor(node) {\n        this.Name = node.attributes[\"name\"].value;\n        var id = node.attributes[\"id\"].value;\n        this.Id = parseInt(id.substring(3), 16);\n        this.NodeTagName = node.tagName;\n    }\n    FindAndAdd(node, subnodename, addnode) {\n        var nodes = node.ownerDocument.evaluate(subnodename, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var subnode = nodes.iterateNext();\n            if (subnode == null)\n                break;\n            addnode(subnode);\n        } while (true);\n    }\n}\nexport class IHCGroup extends IHCBase {\n    constructor(node) {\n        super(node);\n        this.Note = node.attributes[\"note\"].value;\n        this.FunctionBlocks = new Array();\n        this.Products = new Array();\n        this.FindAndAdd(node, \"functionblock\", (subnode) => {\n            this.FunctionBlocks.push(new IHCFunctionBlock(subnode));\n        });\n        var products = node.ownerDocument.evaluate(\"product_airlink\", node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var pnode = products.iterateNext();\n            if (pnode == null)\n                break;\n            var product = new IHCWirelessProduct(pnode);\n            this.Products.push(product);\n        } while (true);\n        products = node.ownerDocument.evaluate(\"product_dataline\", node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var pnode = products.iterateNext();\n            if (pnode == null)\n                break;\n            var product = new IHCDatalineProduct(pnode);\n            this.Products.push(product);\n        } while (true);\n    }\n}\nexport class IHCProduct extends IHCBase {\n    constructor(node) {\n        super(node);\n        this.Inputs = new Array();\n        this.Outputs = new Array();\n        this.Note = node.attributes[\"note\"].value;\n        this.Position = node.attributes[\"position\"].value;\n        this.FindAndAdd(node, \"airlink_input\", (subnode) => {\n            this.Inputs.push(new IHCInput(subnode));\n        });\n        this.FindAndAdd(node, \"airlink_dimmer_increase\", (subnode) => {\n            this.Inputs.push(new IHCInput(subnode));\n        });\n        this.FindAndAdd(node, \"airlink_dimmer_decrease\", (subnode) => {\n            this.Inputs.push(new IHCInput(subnode));\n        });\n        this.FindAndAdd(node, \"airlink_dimming\", (subnode) => {\n            this.Inputs.push(new IHCInput(subnode));\n        });\n        this.FindAndAdd(node, \"dataline_input\", (subnode) => {\n            this.Inputs.push(new IHCInput(subnode));\n        });\n        this.FindAndAdd(node, \"airlink_relay\", (subnode) => {\n            this.Outputs.push(new IHCOutput(subnode));\n        });\n        this.FindAndAdd(node, \"dataline_output\", (subnode) => {\n            this.Outputs.push(new IHCOutput(subnode));\n        });\n        this.FindAndAdd(node, \"light_indication\", (subnode) => {\n            this.Outputs.push(new IHCOutput(subnode));\n        });\n    }\n}\nexport class IHCWirelessProduct extends IHCProduct {\n    constructor(node) {\n        super(node);\n    }\n}\nexport class IHCDatalineProduct extends IHCProduct {\n    constructor(node) {\n        super(node);\n    }\n}\nexport class IHCFunctionBlock extends IHCBase {\n    constructor(node) {\n        super(node);\n        this.Note = node.attributes[\"note\"].value;\n        this.Inputs = new Array();\n        var inputs = node.ownerDocument.evaluate(\"inputs/*\", node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var inputnode = inputs.iterateNext();\n            if (inputnode == null)\n                break;\n            var input = new IHCInput(inputnode);\n            this.Inputs.push(input);\n        } while (true);\n        this.Outputs = new Array();\n        var outputs = node.ownerDocument.evaluate(\"outputs/*\", node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var outputnode = outputs.iterateNext();\n            if (outputnode == null)\n                break;\n            var output = new IHCOutput(outputnode);\n            this.Outputs.push(output);\n        } while (true);\n    }\n}\nexport class IHCResource extends IHCBase {\n    constructor(node) {\n        super(node);\n    }\n    get IsLightLevel() {\n        return this.NodeTagName == \"resource_light_level\" || this.NodeTagName == \"link_dimming\";\n    }\n}\nexport class IHCInput extends IHCResource {\n    constructor(node) {\n        super(node);\n    }\n}\nexport class IHCOutput extends IHCResource {\n    constructor(node) {\n        super(node);\n    }\n}\nexport class IHCProject {\n    constructor(xmldoc) {\n        this.xmldoc = xmldoc;\n        this.Groups = new Array();\n        var gs = this.xmldoc.evaluate(\"/utcs_project/groups/group\", this.xmldoc, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);\n        do {\n            var node = gs.iterateNext();\n            if (node == null)\n                break;\n            var group = new IHCGroup(node);\n            this.Groups.push(group);\n        } while (true);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import { css } from \"lit-element\";\nexport const darkStyles = {\n    \"primary-background-color\": \"#111111\",\n    \"card-background-color\": \"#1c1c1c\",\n    \"secondary-background-color\": \"#202020\",\n    \"primary-text-color\": \"#e1e1e1\",\n    \"secondary-text-color\": \"#9b9b9b\",\n    \"disabled-text-color\": \"#6f6f6f\",\n    \"app-header-text-color\": \"#e1e1e1\",\n    \"app-header-background-color\": \"#101e24\",\n    \"switch-unchecked-button-color\": \"#999999\",\n    \"switch-unchecked-track-color\": \"#9b9b9b\",\n    \"divider-color\": \"rgba(225, 225, 225, .12)\",\n    \"mdc-ripple-color\": \"#AAAAAA\",\n    \"codemirror-keyword\": \"#C792EA\",\n    \"codemirror-operator\": \"#89DDFF\",\n    \"codemirror-variable\": \"#f07178\",\n    \"codemirror-variable-2\": \"#EEFFFF\",\n    \"codemirror-variable-3\": \"#DECB6B\",\n    \"codemirror-builtin\": \"#FFCB6B\",\n    \"codemirror-atom\": \"#F78C6C\",\n    \"codemirror-number\": \"#FF5370\",\n    \"codemirror-def\": \"#82AAFF\",\n    \"codemirror-string\": \"#C3E88D\",\n    \"codemirror-string-2\": \"#f07178\",\n    \"codemirror-comment\": \"#545454\",\n    \"codemirror-tag\": \"#FF5370\",\n    \"codemirror-meta\": \"#FFCB6B\",\n    \"codemirror-attribute\": \"#C792EA\",\n    \"codemirror-property\": \"#C792EA\",\n    \"codemirror-qualifier\": \"#DECB6B\",\n    \"codemirror-type\": \"#DECB6B\",\n};\nexport const derivedStyles = {\n    \"error-state-color\": \"var(--error-color)\",\n    \"state-icon-unavailable-color\": \"var(--disabled-text-color)\",\n    \"sidebar-text-color\": \"var(--primary-text-color)\",\n    \"sidebar-background-color\": \"var(--card-background-color)\",\n    \"sidebar-selected-text-color\": \"var(--primary-color)\",\n    \"sidebar-selected-icon-color\": \"var(--primary-color)\",\n    \"sidebar-icon-color\": \"rgba(var(--rgb-primary-text-color), 0.6)\",\n    \"switch-checked-color\": \"var(--primary-color)\",\n    \"switch-checked-button-color\": \"var(--switch-checked-color, var(--primary-background-color))\",\n    \"switch-checked-track-color\": \"var(--switch-checked-color, #000000)\",\n    \"switch-unchecked-button-color\": \"var(--switch-unchecked-color, var(--primary-background-color))\",\n    \"switch-unchecked-track-color\": \"var(--switch-unchecked-color, #000000)\",\n    \"slider-color\": \"var(--primary-color)\",\n    \"slider-secondary-color\": \"var(--light-primary-color)\",\n    \"slider-bar-color\": \"var(--disabled-text-color)\",\n    \"label-badge-grey\": \"var(--paper-grey-500)\",\n    \"label-badge-background-color\": \"var(--card-background-color)\",\n    \"label-badge-text-color\": \"rgba(var(--rgb-primary-text-color), 0.8)\",\n    \"paper-listbox-background-color\": \"var(--card-background-color)\",\n    \"paper-item-icon-color\": \"var(--state-icon-color)\",\n    \"paper-item-icon-active-color\": \"var(--state-icon-active-color)\",\n    \"table-row-background-color\": \"var(--primary-background-color)\",\n    \"table-row-alternative-background-color\": \"var(--secondary-background-color)\",\n    \"paper-slider-knob-color\": \"var(--slider-color)\",\n    \"paper-slider-knob-start-color\": \"var(--slider-color)\",\n    \"paper-slider-pin-color\": \"var(--slider-color)\",\n    \"paper-slider-pin-start-color\": \"var(--slider-color)\",\n    \"paper-slider-active-color\": \"var(--slider-color)\",\n    \"paper-slider-secondary-color\": \"var(--slider-secondary-color)\",\n    \"paper-slider-container-color\": \"var(--slider-bar-color)\",\n    \"data-table-background-color\": \"var(--card-background-color)\",\n    \"markdown-code-background-color\": \"var(--primary-background-color)\",\n    \"mdc-theme-primary\": \"var(--primary-color)\",\n    \"mdc-theme-secondary\": \"var(--accent-color)\",\n    \"mdc-theme-background\": \"var(--primary-background-color)\",\n    \"mdc-theme-surface\": \"var(--card-background-color)\",\n    \"mdc-theme-on-primary\": \"var(--text-primary-color)\",\n    \"mdc-theme-on-secondary\": \"var(--text-primary-color)\",\n    \"mdc-theme-on-surface\": \"var(--primary-text-color)\",\n    \"mdc-theme-text-primary-on-background\": \"var(--primary-text-color)\",\n    \"mdc-theme-text-secondary-on-background\": \"var(--secondary-text-color)\",\n    \"mdc-theme-text-icon-on-background\": \"var(--secondary-text-color)\",\n    \"app-header-text-color\": \"var(--text-primary-color)\",\n    \"app-header-background-color\": \"var(--primary-color)\",\n    \"material-body-text-color\": \"var(--primary-text-color)\",\n    \"material-background-color\": \"var(--card-background-color)\",\n    \"material-secondary-background-color\": \"var(--secondary-background-color)\",\n    \"material-secondary-text-color\": \"var(--secondary-text-color)\",\n    \"mdc-checkbox-unchecked-color\": \"rgba(var(--rgb-primary-text-color), 0.54)\",\n    \"mdc-checkbox-disabled-color\": \"var(--disabled-text-color)\",\n    \"mdc-radio-unchecked-color\": \"rgba(var(--rgb-primary-text-color), 0.54)\",\n    \"mdc-radio-disabled-color\": \"var(--disabled-text-color)\",\n    \"mdc-tab-text-label-color-default\": \"var(--primary-text-color)\",\n    \"mdc-button-disabled-ink-color\": \"var(--disabled-text-color)\",\n    \"mdc-button-outline-color\": \"var(--divider-color)\",\n    \"mdc-dialog-scroll-divider-color\": \"var(--divider-color)\",\n};\nexport const haStyle = css `\n  :host {\n    font-family: var(--paper-font-body1_-_font-family);\n    -webkit-font-smoothing: var(--paper-font-body1_-_-webkit-font-smoothing);\n    font-size: var(--paper-font-body1_-_font-size);\n    font-weight: var(--paper-font-body1_-_font-weight);\n    line-height: var(--paper-font-body1_-_line-height);\n  }\n\n  app-header-layout,\n  ha-app-layout {\n    background-color: var(--primary-background-color);\n  }\n\n  app-header,\n  app-toolbar {\n    background-color: var(--app-header-background-color);\n    font-weight: 400;\n    color: var(--app-header-text-color, white);\n  }\n\n  app-toolbar {\n    height: var(--header-height);\n  }\n\n  app-header div[sticky] {\n    height: 48px;\n  }\n\n  app-toolbar [main-title] {\n    margin-left: 20px;\n  }\n\n  h1 {\n    font-family: var(--paper-font-headline_-_font-family);\n    -webkit-font-smoothing: var(--paper-font-headline_-_-webkit-font-smoothing);\n    white-space: var(--paper-font-headline_-_white-space);\n    overflow: var(--paper-font-headline_-_overflow);\n    text-overflow: var(--paper-font-headline_-_text-overflow);\n    font-size: var(--paper-font-headline_-_font-size);\n    font-weight: var(--paper-font-headline_-_font-weight);\n    line-height: var(--paper-font-headline_-_line-height);\n  }\n\n  h2 {\n    font-family: var(--paper-font-title_-_font-family);\n    -webkit-font-smoothing: var(--paper-font-title_-_-webkit-font-smoothing);\n    white-space: var(--paper-font-title_-_white-space);\n    overflow: var(--paper-font-title_-_overflow);\n    text-overflow: var(--paper-font-title_-_text-overflow);\n    font-size: var(--paper-font-title_-_font-size);\n    font-weight: var(--paper-font-title_-_font-weight);\n    line-height: var(--paper-font-title_-_line-height);\n  }\n\n  h3 {\n    font-family: var(--paper-font-subhead_-_font-family);\n    -webkit-font-smoothing: var(--paper-font-subhead_-_-webkit-font-smoothing);\n    white-space: var(--paper-font-subhead_-_white-space);\n    overflow: var(--paper-font-subhead_-_overflow);\n    text-overflow: var(--paper-font-subhead_-_text-overflow);\n    font-size: var(--paper-font-subhead_-_font-size);\n    font-weight: var(--paper-font-subhead_-_font-weight);\n    line-height: var(--paper-font-subhead_-_line-height);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  .secondary {\n    color: var(--secondary-text-color);\n  }\n\n  .error {\n    color: var(--error-color);\n  }\n\n  .warning {\n    color: var(--error-color);\n  }\n\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n\n  button.link {\n    background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    font: inherit;\n    text-align: left;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  .card-actions a {\n    text-decoration: none;\n  }\n\n  .card-actions .warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n\n  .layout.horizontal,\n  .layout.vertical {\n    display: flex;\n  }\n  .layout.inline {\n    display: inline-flex;\n  }\n  .layout.horizontal {\n    flex-direction: row;\n  }\n  .layout.vertical {\n    flex-direction: column;\n  }\n  .layout.wrap {\n    flex-wrap: wrap;\n  }\n  .layout.no-wrap {\n    flex-wrap: nowrap;\n  }\n  .layout.center,\n  .layout.center-center {\n    align-items: center;\n  }\n  .layout.bottom {\n    align-items: flex-end;\n  }\n  .layout.center-justified,\n  .layout.center-center {\n    justify-content: center;\n  }\n  .flex {\n    flex: 1;\n    flex-basis: 0.000000001px;\n  }\n  .flex-auto {\n    flex: 1 1 auto;\n  }\n  .flex-none {\n    flex: none;\n  }\n  .layout.justified {\n    justify-content: space-between;\n  }\n`;\nexport const haStyleDialog = css `\n  /* prevent clipping of positioned elements */\n  paper-dialog-scrollable {\n    --paper-dialog-scrollable: {\n      -webkit-overflow-scrolling: auto;\n    }\n  }\n\n  /* force smooth scrolling for iOS 10 */\n  paper-dialog-scrollable.can-scroll {\n    --paper-dialog-scrollable: {\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .paper-dialog-buttons {\n    align-items: flex-end;\n    padding: 8px;\n    padding-bottom: max(env(safe-area-inset-bottom), 8px);\n  }\n\n  @media all and (min-width: 450px) and (min-height: 500px) {\n    ha-paper-dialog {\n      min-width: 400px;\n    }\n  }\n\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    paper-dialog,\n    ha-paper-dialog {\n      margin: 0;\n      width: calc(\n        100% - env(safe-area-inset-right) - env(safe-area-inset-left)\n      ) !important;\n      min-width: calc(\n        100% - env(safe-area-inset-right) - env(safe-area-inset-left)\n      ) !important;\n      max-width: calc(\n        100% - env(safe-area-inset-right) - env(safe-area-inset-left)\n      ) !important;\n      max-height: calc(100% - var(--header-height));\n\n      position: fixed !important;\n      bottom: 0px;\n      left: env(safe-area-inset-left);\n      right: env(safe-area-inset-right);\n      overflow: scroll;\n      border-bottom-left-radius: 0px;\n      border-bottom-right-radius: 0px;\n    }\n  }\n\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-heading-ink-color: var(--primary-text-color);\n    --mdc-dialog-content-ink-color: var(--primary-text-color);\n    --justify-action-buttons: space-between;\n  }\n\n  ha-dialog .form {\n    padding-bottom: 24px;\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(\n        100vw - env(safe-area-inset-right) - env(safe-area-inset-left)\n      );\n      --mdc-dialog-max-width: calc(\n        100vw - env(safe-area-inset-right) - env(safe-area-inset-left)\n      );\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --mdc-shape-medium: 0px;\n      --vertial-align-dialog: flex-end;\n    }\n  }\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\nexport const haStyleScrollbar = css `\n  .ha-scrollbar::-webkit-scrollbar {\n    width: 0.4rem;\n    height: 0.4rem;\n  }\n\n  .ha-scrollbar::-webkit-scrollbar-thumb {\n    -webkit-border-radius: 4px;\n    border-radius: 4px;\n    background: var(--scrollbar-thumb-color);\n  }\n\n  .ha-scrollbar {\n    overflow-y: auto;\n    scrollbar-color: var(--scrollbar-thumb-color) transparent;\n    scrollbar-width: thin;\n  }\n`;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, customElement } from \"lit-element\";\nlet LoaderElement = class LoaderElement extends LitElement {\n    static get styles() {\n        return css `\n      /* spinner */\n      .loader {\n        border: 16px solid #f3f3f3;\n        border-radius: 50%;\n        border-top: 16px solid #3498db;\n        width: 50px;\n        height: 50px;\n        animation: spin 2s linear infinite;\n      }\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    `;\n    }\n    render() {\n        return html `<div class=\"loader\"></div>`;\n    }\n    constructor() {\n        super();\n    }\n};\nLoaderElement = __decorate([\n    customElement(\"ihc-loader\")\n], LoaderElement);\nexport { LoaderElement };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nimport { haStyle } from \"../homeassistant-frontend/src/resources/styles\";\nimport { IHCManager } from \"./ihcmanager\";\nrequire(\"./elements/ihc-controller-element\");\nrequire(\"./ihcmanager\");\n// This is the main Home Assistant panel for the IHCViewer\nlet HaPanelIHCViewer = class HaPanelIHCViewer extends LitElement {\n    constructor() {\n        super();\n        // Set to true when a restart of home assistant is required\n        this.restartRequired = false;\n    }\n    static get styles() {\n        return [\n            haStyle,\n            css `\n      #ihcviewer {\n        width: 100%;\n        height: 100%;\n      }\n      #ihcviewerheader {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        background-color: var(--app-header-background-color);\n        color: var(--app-header-text-color);\n      }\n      #title {\n        padding: 15px 10px 0px 10px;\n        font-size: 20px;\n        height: calc( var(--header-height) - 16px);\n      }\n      #controllerselector {\n        justify-self: right;\n        padding-right: 10px;\n      }\n      #controllers {\n        height: calc(100% - var(--header-height));\n      }\n      #restartrequired {\n        display: inline-block;\n        animation: blinker 1s linear infinite;\n        cursor: default;\n      }\n      @keyframes blinker { 50% { opacity: 0;}}\n    `\n        ];\n    }\n    render() {\n        if (this.panel.config['ihcviewer'] == null)\n            return html `No controllers`;\n        return html `\n      <div id=\"ihcviewer\"  @restartrequired=${this.onRestartRequired}>\n        <div id=\"ihcviewerheader\">\n          <div id=\"title\">IHC Viewer</div>\n          ${this.render_restart()}\n          ${this.render_controllersSelector()}\n        </div>\n        <div id=\"controllers\">\n          ${this.panel.config['ihcviewer'].map((controllerid, index) => html `\n              <ihc-controller id=\"ihccontroller_${index}\" controllerId=\"${controllerid}\" show=\"${this.selectedcontrollerid == controllerid}\"></ihc-controller>\n          `)}\n        </div>\n      </div>\n    `;\n    }\n    render_restart() {\n        if (!this.restartRequired)\n            return \"\";\n        return html `<span id=\"restartrequired\" title=\"You have made changes to the manual ihc setup that will require a Home Assistant restart.\">Restart required</span>`;\n    }\n    render_controllersSelector() {\n        if (this.panel.config['ihcviewer'].length <= 1)\n            return html `<span></span>`;\n        return html `\n      <span id=\"controllerselector\">\n        <select @change=${this.onChangeController}>\n          ${this.panel.config['ihcviewer'].map(id => html `<option value=\"${id}\">${id}</option>`)}\n        </select>\n      </span>`;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        IHCManager.initialize(this.hass);\n        // Select the first controller by default\n        this.selectedcontrollerid = this.panel.config['ihcviewer'][0];\n    }\n    onChangeController(event) {\n        this.selectedcontrollerid = event.target.value;\n    }\n    onRestartRequired(event) {\n        this.restartRequired = true;\n        return false;\n    }\n};\n__decorate([\n    property({ type: Object })\n], HaPanelIHCViewer.prototype, \"hass\", void 0);\n__decorate([\n    property({ type: Boolean })\n], HaPanelIHCViewer.prototype, \"narrow\", void 0);\n__decorate([\n    property({ type: Boolean })\n], HaPanelIHCViewer.prototype, \"showMenu\", void 0);\n__decorate([\n    property({ type: Object })\n], HaPanelIHCViewer.prototype, \"panel\", void 0);\n__decorate([\n    property({ type: String })\n], HaPanelIHCViewer.prototype, \"selectedcontrollerid\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: false })\n], HaPanelIHCViewer.prototype, \"restartRequired\", void 0);\nHaPanelIHCViewer = __decorate([\n    customElement(\"ha-panel-ihcviewer\")\n], HaPanelIHCViewer);\nexport { HaPanelIHCViewer };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nimport { haStyle } from \"../../homeassistant-frontend/src/resources/styles\";\nimport { IHCResource } from \"../ihcproject\";\nimport { Selection } from \"./ihc-tree-node\";\nimport { IHCManager } from \"../ihcmanager\";\nrequire(\"./ihc-info-element\");\nrequire(\"./ihc-log-element\");\nrequire(\"./ihc-properties-element\");\nrequire(\"./ihc-tree-node\");\nlet IhcControllerElement = class IhcControllerElement extends LitElement {\n    constructor() {\n        super();\n        this.isProjectLoading = false;\n        this.selected = null;\n        this.onselected = null;\n        this.offselected = null;\n        this.isProjectLoading = false;\n        this.ihcproject = null;\n        this.ihcmapping = null;\n        this.selectedtab = 0;\n    }\n    static get styles() {\n        return [\n            haStyle,\n            css `\n      #content {\n        height: 100%;\n      }\n      .flex-container {\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n      #project {\n        height: calc(100% - 33px);\n      }\n      #ihcprojecttree {\n        padding-left: 10px;\n        padding-top: 10px;\n        flex-grow: 1;\n        overflow-y: auto;\n      }\n      #ihcproperties {\n        flex-grow: 0;\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: 10px;\n        padding-top: 10px;\n        padding-left: 10px;\n      }\n      #log {\n        height: calc(100% - 33px);\n        padding-left: 10px;\n      }\n      #info {\n        height: calc(100% - 33px);\n        padding-left: 10px;\n      }\n      #controllertab {\n        border-bottom: 1px solid var(--divider-color);\n        border-top: 1px solid var(--divider-color);\n        background-color: var(--primary-color);\n        color: var(--text-primary-color);\n        cursor: default;\n      }\n      .tab-button {\n        display: inline-block;\n        font-size: 14px;\n        padding: 6px 20px 6px 10px;\n        cursor: pointer;\n      }\n      .tab-button.selected {\n        background-color: var(--dark-primary-color);\n        color: var(--text-primary-color);\n        font-weight: bold;\n      }\n      `\n        ];\n    }\n    render() {\n        return html `\n        ${this.show == \"true\" ? \"\" : html `<style>#content { display:none}</style>`}\n        ${this.selectedtab == 0 ? html `` : html `<style>#project { display:none}</style>`}\n        ${this.selectedtab == 1 ? html `<style>#log { display:block}</style>` : html `<style>#log { display:none}</style>`}\n        ${this.selectedtab == 2 ? html `<style>#info { display:block}</style>` : html `<style>#info { display:none}</style>`}\n        <div id=\"content\" class=\"flex-container\">\n          <div id=\"controllertab\">\n            <div class=\"tab-button ${this.selectedtab == 0 ? 'selected' : ''}\" @click=${this.selectTab} data-tabid='0'>Project</div>\n            <div class=\"tab-button ${this.selectedtab == 1 ? 'selected' : ''}\" @click=${this.selectTab} data-tabid='1'>Log</div>\n            <div class=\"tab-button ${this.selectedtab == 2 ? 'selected' : ''}\" @click=${this.selectTab} data-tabid='2'>Info</div>\n          </div>\n          <div id=\"project\" class=\"flex-container\">\n            ${this.isProjectLoading ? html `<div class=\"loader\"></div>` : \"\"}\n            <div id=\"ihcprojecttree\" @select=${this.onSelectNode}>\n              ${this.render_groups()}\n            </div>\n            <ihc-properties id=\"ihcproperties\" controllerId=\"${this.controllerId}\"></ihc-properties>\n          </div>\n          <div id=\"log\">\n            <ihc-log id=\"ihclog\" controllerId=\"${this.controllerId}\"></ihc-log>\n          </div>\n          <div id=\"info\">\n            <ihc-info id=\"ihcinfo\" controllerId=\"${this.controllerId}\"></ihc-info>\n          </div>\n      </div>\n    `;\n    }\n    render_groups() {\n        if (this.ihcproject == null || this.isProjectLoading)\n            return \"\";\n        return this.ihcproject.Groups.map(item => html `\n      <ihc-tree-node id=\"group_${item.Id}\"></ihc-tree-node>\n    `);\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.connectedCallback.call(this);\n            this.loadController();\n        });\n    }\n    updated(changedProps) {\n        const _super = Object.create(null, {\n            updated: { get: () => super.updated }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.updated.call(this, changedProps);\n            if (this.ihcproject == null)\n                return;\n            this.ihcproject.Groups.map((item) => {\n                var treenode = this.shadowRoot.getElementById(`group_${item.Id}`);\n                treenode.data = item;\n            });\n        });\n    }\n    loadController() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isProjectLoading = true;\n            this.ihcmapping = yield IHCManager.instance.get(this.controllerId).getMapping();\n            // If any entityes are new will we require restart\n            for (let id in this.ihcmapping) {\n                let entity = this.ihcmapping[id];\n                if ('changed' in entity) {\n                    let restartevent = new CustomEvent(\"restartrequired\", { bubbles: true, composed: true });\n                    this.dispatchEvent(restartevent);\n                    break;\n                }\n            }\n            this.ihcproject = yield IHCManager.instance.get(this.controllerId).getProject();\n            if (this.ihcproject) {\n                this.updateProject(this.ihcproject);\n            }\n            this.isProjectLoading = false;\n        });\n    }\n    // Update the iconclass of connected resources\n    updateProject(project) {\n        for (let group of project.Groups) {\n            group.iconclass = \"groupicon\";\n            group.Children = [];\n            for (let product of group.Products) {\n                group.Children.push(product);\n                product.iconclass = \"producticon\";\n                product.Children = [];\n                for (let input of product.Inputs) {\n                    product.Children.push(input);\n                    input.iconclass = \"inputicon\";\n                    if (input.Id in this.ihcmapping)\n                        input.iconclass += \" connected\";\n                }\n                for (let output of product.Outputs) {\n                    product.Children.push(output);\n                    output.iconclass = \"outputicon\";\n                    if (output.Id in this.ihcmapping)\n                        output.iconclass += \" connected\";\n                }\n            }\n            for (let fn of group.FunctionBlocks) {\n                group.Children.push(fn);\n                fn.iconclass = \"functionicon\";\n                fn.Children = [];\n                for (let input of fn.Inputs) {\n                    fn.Children.push(input);\n                    input.iconclass = \"inputicon\";\n                    if (input.Id in this.ihcmapping)\n                        input.iconclass += \" connected\";\n                }\n                for (let output of fn.Outputs) {\n                    fn.Children.push(output);\n                    output.iconclass = \"outputicon\";\n                    if (output.Id in this.ihcmapping)\n                        output.iconclass += \" connected\";\n                }\n            }\n        }\n        this.ihcproject = project;\n    }\n    onSelectNode(event) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            var properties = this.shadowRoot.getElementById(\"ihcproperties\");\n            var node = (_a = event === null || event === void 0 ? void 0 : event.detail) === null || _a === void 0 ? void 0 : _a.node;\n            // When shift is down we have multiselect\n            if (this.selected && event.detail.shiftKey) {\n                if (this.selected == node)\n                    return false;\n                if (this.offselected)\n                    return false;\n                if (this.onselected) {\n                    if (this.onselected == node)\n                        return false;\n                    this.offselected = node;\n                    node.selected = Selection.OffIdSelected;\n                }\n                else {\n                    this.onselected = node;\n                    node.selected = Selection.OnIdSelected;\n                }\n                properties.setSelected(this.selected, (_b = this.onselected) === null || _b === void 0 ? void 0 : _b.data.Id, (_c = this.offselected) === null || _c === void 0 ? void 0 : _c.data.Id);\n                return false;\n            }\n            if (this.selected) {\n                this.selected.selected = Selection.NotSelected;\n                this.selected = null;\n                if (this.onselected) {\n                    this.onselected.selected = Selection.NotSelected;\n                    this.onselected = null;\n                }\n                if (this.offselected) {\n                    this.offselected.selected = Selection.NotSelected;\n                    this.offselected = null;\n                }\n                properties.setSelected(null);\n            }\n            if (node == null)\n                return false;\n            this.selected = node;\n            this.selected.selected = Selection.Selected;\n            if (node.data instanceof IHCResource) {\n                properties.setSelected(this.selected);\n            }\n            return false;\n        });\n    }\n    selectTab(event) {\n        var tab = event.target.attributes['data-tabid'].value;\n        this.selectedtab = tab;\n    }\n};\n__decorate([\n    property({ type: String }) // I think there is a bug in boolean properties\n], IhcControllerElement.prototype, \"show\", void 0);\n__decorate([\n    property({ type: String })\n], IhcControllerElement.prototype, \"controllerId\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: false })\n], IhcControllerElement.prototype, \"isProjectLoading\", void 0);\n__decorate([\n    property({ type: Object, attribute: false })\n], IhcControllerElement.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Object, attribute: false })\n], IhcControllerElement.prototype, \"onselected\", void 0);\n__decorate([\n    property({ type: Object, attribute: false })\n], IhcControllerElement.prototype, \"offselected\", void 0);\n__decorate([\n    property({ type: Number, attribute: false })\n], IhcControllerElement.prototype, \"selectedtab\", void 0);\nIhcControllerElement = __decorate([\n    customElement(\"ihc-controller\")\n], IhcControllerElement);\nexport { IhcControllerElement };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nimport { IHCManager } from \"../ihcmanager\";\nrequire(\"./loader-element\");\nlet IhcInfoElement = class IhcInfoElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.isLoading = false;\n    }\n    static get styles() {\n        return css `\n      #info {\n        padding-left: 10px;\n        padding-right: 10px;\n        padding-top: 10px;\n      }\n    `;\n    }\n    render() {\n        if (this.systeminfo == null) {\n            return html `\n      <div id=\"info\">\n        ${this.isLoading ? html `<ihc-loader/>` : \"\"}\n      </div>`;\n        }\n        var uptimestr = this.uptimeAsString();\n        return html `\n        <div id=\"info\">\n          ${this.isLoading ? html `<ihc-loader/>` : \"\"}\n          <table>\n            <tr><td>Uptime</td><td>${uptimestr}</td></tr>\n            <tr><td>Brand</td><td>${this.systeminfo.brand}</td></tr>\n            <tr><td>Hardware version</td><td>${this.systeminfo.hw_revision}</td></tr>\n            <tr><td>Led dimmer software version</td><td>${this.systeminfo.led_dimmer_software_version}</td></tr>\n            <tr><td>Productiondate</td><td>${this.systeminfo.production_date}</td></tr>\n            <tr><td>Serial number</td><td>${this.systeminfo.serial_number}</td></tr>\n            <tr><td>Software date</td><td>${this.systeminfo.sw_date}</td></tr>\n            <tr><td>Version</td><td>${this.systeminfo.version}</td></tr>\n          </table>\n        </div>\n    `;\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.connectedCallback.call(this);\n            this.systemInfoRequest();\n        });\n    }\n    systemInfoRequest() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isLoading = true;\n            try {\n                let response = yield IHCManager.instance.fetchWithAuth(`/api/ihcviewer/systeminfo/${this.controllerId}`);\n                if (response.ok) {\n                    this.systeminfo = yield response.json();\n                }\n            }\n            finally {\n                this.isLoading = false;\n            }\n        });\n    }\n    uptimeAsString() {\n        var uptimestr = \"\";\n        if (this.systeminfo != null) {\n            var uptime = parseInt(this.systeminfo.uptime) / 1000;\n            var days = Math.floor(uptime / 60 / 60 / 24);\n            if (days > 0) {\n                uptimestr += days + \" days \";\n                uptime -= days * 60 * 60 * 24;\n            }\n            var hours = Math.floor(uptime / 60 / 60);\n            if (days > 0 || hours > 0) {\n                uptimestr += hours + \" hours \";\n                uptime -= hours * 60 * 60;\n            }\n            var minutes = Math.floor(uptime / 60);\n            if (days > 0 || hours > 0 || minutes > 0) {\n                uptimestr += minutes + \" min \";\n                uptime -= minutes * 60;\n            }\n            uptimestr += Math.floor(uptime) + \" sec \";\n        }\n        return uptimestr;\n    }\n};\n__decorate([\n    property({ type: String, reflect: true })\n], IhcInfoElement.prototype, \"controllerId\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: false })\n], IhcInfoElement.prototype, \"isLoading\", void 0);\nIhcInfoElement = __decorate([\n    customElement(\"ihc-info\")\n], IhcInfoElement);\nexport { IhcInfoElement };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nimport { IHCManager } from \"../ihcmanager\";\nrequire(\"./loader-element\");\nlet IhcLogElement = class IhcLogElement extends LitElement {\n    constructor() {\n        super();\n        this.log = \"\";\n        this.isLogLoading = false;\n        this.isLogLoading = false;\n        this.log = \"\";\n    }\n    static get styles() {\n        return css `\n      #log {\n        padding-left: 10px;\n        padding-right: 10px;\n        padding-top: 10px;\n      }\n    `;\n    }\n    render() {\n        return html `\n      <div id=\"log\">\n        ${this.isLogLoading ? html `<ihc-loader/>` : \"\"}\n        <pre id=\"ihc_log\">${this.log == \"\" ? \"No log data\" : this.log}</pre>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.connectedCallback.call(this);\n            this.logRequest();\n        });\n    }\n    logRequest() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isLogLoading = true;\n            try {\n                let response = yield IHCManager.instance.fetchWithAuth(`/api/ihcviewer/log/${this.controllerId}`);\n                if (response.ok) {\n                    let txt = yield response.text();\n                    if (txt == \"\") {\n                        this.log = \"Log is empty\";\n                    }\n                    else {\n                        this.log = txt;\n                    }\n                }\n            }\n            finally {\n                this.isLogLoading = false;\n            }\n        });\n    }\n};\n__decorate([\n    property({ type: String, reflect: true })\n], IhcLogElement.prototype, \"controllerId\", void 0);\n__decorate([\n    property({ type: String, attribute: false })\n], IhcLogElement.prototype, \"log\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: false })\n], IhcLogElement.prototype, \"isLogLoading\", void 0);\nIhcLogElement = __decorate([\n    customElement(\"ihc-log\")\n], IhcLogElement);\nexport { IhcLogElement };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { html, css, customElement, property } from \"lit-element\";\nimport { IhcResourceDialog } from \"./ihc-resource-dlg\";\nlet IhcBinaryResourceDialog = class IhcBinaryResourceDialog extends IhcResourceDialog {\n    constructor() {\n        super();\n        this.title = \"Add a binary sensor\";\n    }\n    static get styles() {\n        return super.styles.concat([\n            css `\n        #type {\n          width: 100%;\n        }\n      `,\n            ,\n        ]);\n    }\n    render_controls() {\n        return html `\n      <div class=\"control-row\">\n        <input id=\"inverted\" type=\"checkbox\"/><label for=\"inverted\">Inverted</label>\n      </div>\n      <div class=\"control-row\">\n        <div>Type</div>\n        <select id=\"type\">\n          <option></option>\n          <option>battery</option>\n          <option>battery_charging</option>\n          <option>cold</option>\n          <option>connectivity</option>\n          <option>door</option>\n          <option>garage_door</option>\n          <option>gas</option>\n          <option>heat</option>\n          <option>light</option>\n          <option>lock</option>\n          <option>moisture</option>\n          <option>motion</option>\n          <option>moving</option>\n          <option>occupancy</option>\n          <option>opening</option>\n          <option>plug</option>\n          <option>power</option>\n          <option>presence</option>\n          <option>safety</option>\n          <option>smoke</option>\n          <option>sound</option>\n          <option>vibration</option>\n          <option>window</option>\n        </select>\n      </div>\n    `;\n    }\n    onOk() {\n        const _super = Object.create(null, {\n            onOk: { get: () => super.onOk }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this.inverted = this.shadowRoot.getElementById(\"inverted\").checked;\n            this.type = this.shadowRoot.getElementById(\"type\").value;\n            _super.onOk.call(this);\n        });\n    }\n};\n__decorate([\n    property({ type: Boolean, attribute: false })\n], IhcBinaryResourceDialog.prototype, \"inverted\", void 0);\n__decorate([\n    property({ type: String, attribute: false })\n], IhcBinaryResourceDialog.prototype, \"type\", void 0);\nIhcBinaryResourceDialog = __decorate([\n    customElement(\"ihc-binary-res-dlg\")\n], IhcBinaryResourceDialog);\nexport { IhcBinaryResourceDialog };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { html, css, customElement, property } from \"lit-element\";\nimport { IhcResourceDialog } from \"./ihc-resource-dlg\";\nlet IhcSensorResourceDialog = class IhcSensorResourceDialog extends IhcResourceDialog {\n    constructor() {\n        super();\n        this.title = \"Add a sensor\";\n    }\n    static get styles() {\n        return super.styles.concat(css `\n      `);\n    }\n    render_controls() {\n        return html `\n      <div class=\"controll-row\">\n        <div>Unit of measurement (optional)</div>\n        <input id=\"unit\" type=\"text\" size=\"30\" list=\"common-units\"/>\n        <datalist id=\"common-units\">\n          <option>%</option>\n          <option>% RH</option>\n          <option>°C</option>\n          <option>kW</option>\n          <option>kWh</option>\n          <option>Lux</option>\n          <option>W</option>\n          <option>Wh</option>\n        </datalist>\n      </div>\n    `;\n    }\n    onOk() {\n        const _super = Object.create(null, {\n            onOk: { get: () => super.onOk }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this.unit = this.shadowRoot.getElementById(\"unit\").value;\n            _super.onOk.call(this);\n        });\n    }\n};\n__decorate([\n    property({ type: String, attribute: false })\n], IhcSensorResourceDialog.prototype, \"unit\", void 0);\nIhcSensorResourceDialog = __decorate([\n    customElement(\"ihc-sensor-res-dlg\")\n], IhcSensorResourceDialog);\nexport { IhcSensorResourceDialog };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LitElement, html, css, customElement, property } from \"lit-element\";\nimport { IhcResourceDialog } from \"../dialogs/ihc-resource-dlg\";\nimport { copyTextToClipboard } from \"../copytoclipboard\";\nimport { IHCManager } from \"../ihcmanager\";\nrequire(\"../dialogs/ihc-resource-dlg\");\nrequire(\"../dialogs/ihc-binary-res-dlg\");\nrequire(\"../dialogs/ihc-sensor-res-dlg\");\nrequire(\"../dialogs/ihc-resource-dlg\");\nrequire(\"./loader-element\");\nlet IhcPropertiesElement = class IhcPropertiesElement extends LitElement {\n    constructor() {\n        super();\n        this.isLoading = false;\n        this.selected = null;\n        this.isLoading = false;\n    }\n    static get styles() {\n        return [\n            IhcResourceDialog.button_style,\n            css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        align-items: stretch;\n      }\n      #properties {\n        display: inline-block;\n        width: fit-content;\n        vertical-align: top;\n        flex-grow: 0;\n        width: 30em;\n      }\n      #actions {\n        display: inline-block;\n        padding-left: 20px;\n        flex-grow: 1;\n      }\n      .valueactions span{\n        font-size: 10px;\n        font-weight: bold;\n        padding: 0px 5px 0px 5px;\n        cursor: pointer;\n        border-radius: 4px;\n        background-color: var(--mdc-theme-primary, #6200ee);\n        color: var(--mdc-theme-on-primary, #fff);\n        padding: 1px 2px 1px 2px;\n        border: none;\n        box-shadow: var( --ha-card-box-shadow, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12) );\n        margin: 0px 2px 0px 2px;\n      }\n    `\n        ];\n    }\n    render() {\n        var _a;\n        if (this.isLoading)\n            return html `<ihc-loader/>`;\n        if (this.selected == null)\n            return '';\n        return html `\n      <div id=\"properties\">\n        <div>\n          <span>Resource id:</span>\n          <span id=\"resourceid\"> ${this.selected.id}</span>\n          <span\n            id=\"copyres\"\n            title=\"copy resource id to clipboard\"\n              @click=${this.onCopy}\n          >\n            <svg\n              style=\"width: 16px; height: 16px\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"\n              />\n            </svg>\n          </span>\n        </div>\n        <div>\n          <span>Type:</span><span> ${this.selected.type}</span>\n        </div>\n        <div>\n          <span>Value:</span><span> ${this.selected.value}</span>${this.renderValueActions()}\n        </div>\n        ${this.selected.entity_id ? html `\n          <div>\n            <span>Entity:</span><span> ${this.selected.entity_id}</span>\n          </div>\n        ` : \"\"}\n        ${this.selected.state ? html `\n          <div>\n            <span>Friendly name:</span><span> ${this.selected.state.attributes.friendly_name}</span>\n          </div>\n        ` : \"\"}\n      </div>\n      <div id=\"actions\">\n        ${((_a = this.selected) === null || _a === void 0 ? void 0 : _a.manual) ? html `\n          <button @click=${this.removeManual}>Remove manual setup</button>\n          <div>\n            This resource is setup manually, and you can remove the manual setup by clicking the buttom above.\n            (A restart is required)\n          </div>\n        ` : \"\"}\n        ${this.action_binary_sensor ? html `<button @click=${() => { this.showDialog(\"binary-dlg\"); }}>Binary sensor</button>` : \"\"}\n        ${this.action_light ? html `<button @click=${() => { this.showDialog(\"light-dlg\"); }}>Light</button>` : \"\"}\n        ${this.action_sensor ? html `<button @click=${() => { this.showDialog(\"sensor-dlg\"); }}>Sensor</button>` : \"\"}\n        ${this.action_switch ? html `<button @click=${() => { this.showDialog(\"switch-dlg\"); }}>Switch</button>` : \"\"}\n        ${this.action_binary_sensor || this.action_light || this.action_sensor || this.action_switch ?\n            html `<div>\n            To make a manual setup of this ihc resource id as a Home Assistant entity, click one of the buttons.\n            Note: this is a manual setup. You should know what you are doing.\n            Just because it is possible to add something, does not mean it make sense.\n          </div>` : \"\"}\n        </div>\n        <ihc-binary-res-dlg id=\"binary-dlg\" @ok=${this.makeBinarySensor}></ihc-binary-res-dlg>\n        <ihc-resource-dlg id=\"light-dlg\" @ok=${this.makeLight} title=\"Add a light\"></ihc-resource-dlg>\n        <ihc-resource-dlg id=\"switch-dlg\" @ok=${this.makeSwitch} title=\"Add a switch\"></ihc-resource-dlg>\n        <ihc-sensor-res-dlg id=\"sensor-dlg\" @ok=${this.makeSensor}></ihc-sensor-res-dlg>\n      `;\n    }\n    renderValueActions() {\n        if (this.selected.type == 'bool') {\n            return html `<span class=\"valueactions\">\n        <span @click=${this.runtimeBoolOn} title=\"Set the value to On(true)\">on</span>\n        <span @click=${this.runtimeBoolOff} title=\"Set the value to Off(false)\">off</span>\n        <span @click=${this.runtimeBoolToggle} title=\"Toggle the value\">toggle</span>\n      </span>`;\n        }\n        return '';\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.connectedCallback.call(this);\n        });\n    }\n    setSelected(selectednode, onid = null, offid = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.on_id = onid;\n            this.off_id = offid;\n            if (selectednode == null) {\n                this.selected = null;\n                this.selectednode = null;\n                return;\n            }\n            this.selectednode = selectednode;\n            let selectedid = selectednode.data.Id;\n            this.isLoading = true;\n            this.action_binary_sensor = false;\n            this.action_light = false;\n            this.action_sensor = false;\n            this.action_switch = false;\n            let response = yield IHCManager.instance.fetchWithAuth(`/api/ihcviewer/getresource/${this.controllerId}/${selectedid}`);\n            if (response.ok) {\n                this.selected = yield response.json();\n                if (this.selected != null && this.selected.type && !this.selected.entity_id) {\n                    switch (this.selected.type) {\n                        case 'bool':\n                            this.action_binary_sensor = onid == null;\n                            this.action_light = true;\n                            this.action_switch = true;\n                            break;\n                        case 'int':\n                            this.action_light = this.selectednode.data.IsLightLevel;\n                            this.action_sensor = onid == null;\n                            break;\n                        case 'time':\n                        case 'float':\n                            this.action_sensor = true;\n                            break;\n                    }\n                }\n            }\n            this.isLoading = false;\n        });\n    }\n    showDialog(id) {\n        var dlg = this.shadowRoot.getElementById(id);\n        dlg.controllerId = this.controllerId;\n        dlg.ihc_id = this.selected.id;\n        dlg.on_id = this.on_id;\n        dlg.off_id = this.off_id;\n        dlg.open();\n    }\n    makeBinarySensor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var dlg = this.shadowRoot.getElementById('binary-dlg');\n            var data = {\n                id: dlg.ihc_id,\n                name: dlg.name,\n                type: dlg.type,\n                inverted: dlg.inverted,\n            };\n            yield this.apiRequest(`/api/ihcviewer/manual/binarysensor/${this.controllerId}`, data, 'POST');\n            this.selectednode.data.iconclass += \" connected\";\n            this.selectednode.requestUpdate();\n            // Reload properties\n            yield this.setSelected(this.selectednode);\n            let restartevent = new CustomEvent(\"restartrequired\", { bubbles: true, composed: true });\n            this.dispatchEvent(restartevent);\n        });\n    }\n    makeLight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var dlg = this.shadowRoot.getElementById('light-dlg');\n            var data = {\n                id: dlg.ihc_id,\n                name: dlg.name,\n            };\n            if (dlg.on_id != null)\n                data['on_id'] = dlg.on_id;\n            if (dlg.off_id != null)\n                data['off_id'] = dlg.off_id;\n            yield this.apiRequest(`/api/ihcviewer/manual/light/${this.controllerId}`, data, 'POST');\n            // Reload properties\n            yield this.setSelected(this.selectednode);\n        });\n    }\n    makeSwitch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var dlg = this.shadowRoot.getElementById('switch-dlg');\n            var data = {\n                id: dlg.ihc_id,\n                name: dlg.name,\n            };\n            if (dlg.on_id != null)\n                data['on_id'] = dlg.on_id;\n            if (dlg.off_id != null)\n                data['off_id'] = dlg.off_id;\n            yield this.apiRequest(`/api/ihcviewer/manual/switch/${this.controllerId}`, data, 'POST');\n            // Reload properties\n            yield this.setSelected(this.selectednode);\n        });\n    }\n    makeSensor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var dlg = this.shadowRoot.getElementById('sensor-dlg');\n            var data = {\n                id: dlg.ihc_id,\n                name: dlg.name,\n                unit: dlg.unit\n            };\n            yield this.apiRequest(`/api/ihcviewer/manual/sensor/${this.controllerId}`, data, 'POST');\n            // Reload properties\n            yield this.setSelected(this.selectednode);\n        });\n    }\n    removeManual() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var id = this.selected.id;\n            yield this.apiRequest(`/api/ihcviewer/manual/remove/${this.controllerId}/${id}`, '', 'POST');\n            // Reload properties\n            yield this.setSelected(this.selectednode);\n        });\n    }\n    runtimeBoolOn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var id = this.selected.id;\n            if ((yield this.apiRequest(`/api/ihcviewer/setboolresource/${this.controllerId}/${id}/on`, '', 'POST')) == 'on') {\n                this.selected.value = true;\n                this.requestUpdate();\n            }\n        });\n    }\n    runtimeBoolOff() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var id = this.selected.id;\n            if ((yield this.apiRequest(`/api/ihcviewer/setboolresource/${this.controllerId}/${id}/off`, '', 'POST')) == 'off') {\n                this.selected.value = false;\n                this.requestUpdate();\n            }\n        });\n    }\n    runtimeBoolToggle() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var id = this.selected.id;\n            yield this.apiRequest(`/api/ihcviewer/setboolresource/${this.controllerId}/${id}/toggle`, '', 'POST');\n        });\n    }\n    apiRequest(url, data, method = \"GET\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield IHCManager.instance.fetchWithAuth(url, {\n                method: method,\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            });\n            if (response.ok) {\n                return yield response.text();\n            }\n            return \"error\";\n        });\n    }\n    onCopy() {\n        copyTextToClipboard(this.selected.data.Id);\n    }\n};\n__decorate([\n    property({ type: String })\n], IhcPropertiesElement.prototype, \"controllerId\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: false })\n], IhcPropertiesElement.prototype, \"isLoading\", void 0);\n__decorate([\n    property({ type: Object, attribute: false })\n], IhcPropertiesElement.prototype, \"selected\", void 0);\nIhcPropertiesElement = __decorate([\n    customElement(\"ihc-properties\")\n], IhcPropertiesElement);\nexport { IhcPropertiesElement };\n","export function copyTextToClipboard(txt) {\n    //source: http://stackoverflow.com/a/30810322/1016548\n    var textArea = document.createElement(\"textarea\");\n    //\n    // *** This styling is an extra step which is likely not required. ***\n    //\n    // Why is it here? To ensure:\n    // 1. the element is able to have focus and selection.\n    // 2. if element was to flash render it has minimal visual impact.\n    // 3. less flakyness with selection and copying which **might** occur if\n    //    the textarea element is not visible.\n    //\n    // The likelihood is the element won't even render, not even a flash,\n    // so some of these are just precautions. However in IE the element\n    // is visible whilst the popup box asking the user for permission for\n    // the web page to copy to the clipboard.\n    //\n    // Place in top-left corner of screen regardless of scroll position.\n    textArea.style.position = \"fixed\";\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    // Ensure it has a small width and height. Setting to 1px / 1em\n    // doesn't work as this gives a negative w/h on some browsers.\n    textArea.style.width = \"2em\";\n    textArea.style.height = \"2em\";\n    // We don't need padding, reducing the size if it does flash render.\n    textArea.style.padding = \"0\";\n    // Clean up any borders.\n    textArea.style.border = \"none\";\n    textArea.style.outline = \"none\";\n    textArea.style.boxShadow = \"none\";\n    // Avoid flash of white box if rendered for any reason.\n    textArea.style.background = \"transparent\";\n    textArea.value = txt;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n}\n"],"sourceRoot":""}